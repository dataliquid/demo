name: Gitflow Hotfix

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Gitflow action to perform'
        required: true
        type: choice
        options:
          - hotfix-start
          - hotfix-finish
      version:
        description: 'Hotfix version (REQUIRED for both hotfix-start and hotfix-finish, e.g., 1.17.1)'
        required: false
        type: string

jobs:
  gitflow-hotfix:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Fetch all branches
      run: git fetch --all
    
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    
    - name: Configure Git
      run: |
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"
    
    - name: Hotfix Start
      if: inputs.action == 'hotfix-start'
      run: |
        if [ -z "${{ inputs.version }}" ]; then
          mvn gitflow:hotfix-start -B -ntp
        else
          mvn gitflow:hotfix-start -B -ntp -DhotfixVersion=${{ inputs.version }}
        fi
    
    - name: Hotfix Finish
      if: inputs.action == 'hotfix-finish'
      run: |
        # For hotfix-finish, we need the version
        if [ -n "${{ inputs.version }}" ]; then
          HOTFIX_BRANCH="hotfix/${{ inputs.version }}"
          echo "Using provided version: ${{ inputs.version }}"
          echo "Checking for hotfix branch: $HOTFIX_BRANCH"
          
          # Check if the hotfix branch exists
          if git show-ref --verify --quiet "refs/remotes/origin/$HOTFIX_BRANCH"; then
            echo "Found remote hotfix branch: $HOTFIX_BRANCH"
            git checkout "$HOTFIX_BRANCH"
          elif git show-ref --verify --quiet "refs/heads/$HOTFIX_BRANCH"; then
            echo "Found local hotfix branch: $HOTFIX_BRANCH"
            git checkout "$HOTFIX_BRANCH"
          else
            echo "Error: Hotfix branch '$HOTFIX_BRANCH' not found!"
            echo "Available remote branches:"
            git branch -r | grep hotfix/ || echo "No hotfix branches found"
            exit 1
          fi
          
          mvn gitflow:hotfix-finish -B -ntp -DpushRemote=true -DhotfixVersion=${{ inputs.version }}
        else
          echo "Error: 'version' parameter is required for hotfix-finish."
          echo "Please provide the version number (e.g., 1.17.1)"
          exit 1
        fi